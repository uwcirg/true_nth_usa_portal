[tox]
envlist = py27,translations,docs,ui,build-artifacts,py3
skip_missing_interpreters = True

[testenv]
description = Default testing environment, run unit test suite
deps =
    -rrequirements.txt
    pytest-cov
passenv = TRAVIS* PG* SQLALCHEMY_DATABASE_TEST_URI PERSISTENCE_DIR FLASK_APP SECRET_KEY
commands = py.test --ignore=tests/integration_tests --cov portal --cov-report xml:"{toxinidir}/coverage.xml" []

[testenv:docs]
description = Test documentation generation
changedir = docs
commands = sphinx-build -W -n -b html -d {envtmpdir}/doctrees source {envtmpdir}/html

[testenv:ui]
description = Run selenium tests
deps =
    xvfbwrapper
    {[testenv]deps}
passenv = DISPLAY SAUCE_* {[testenv]passenv}
commands = py.test tests/integration_tests/ []

[testenv:build-artifacts]
description = Build docker artifacts and prerequisites (debian package)
deps = docker-compose>=1.19
skip_install = True
passenv = {[testenv]passenv} GIT_REPO DOCKER_* COMPOSE_FILE
whitelist_externals = /bin/bash
commands =
    bash -c "{toxinidir}/bin/docker-build.sh"

[testenv:frontend-translations]
description = Extract frontend strings (to JSON) and convert (to POT)
deps =
    nodeenv
    {[testenv]deps}
whitelist_externals =
    nodeenv
    /bin/bash
commands =
    nodeenv "{envtmpdir}/node_env"
    bash -c 'source "{envtmpdir}/node_env/bin/activate" && npm --prefix "{toxinidir}/portal" install'
    bash -c 'source "{envtmpdir}/node_env/bin/activate" && node "{toxinidir}/portal/node_modules/gulp/bin/gulp.js" --gulpfile "{toxinidir}/portal/i18next_gulpfile.js"'

[testenv:backend-translations]
description = Upload backend strings to Smartling
whitelist_externals = /bin/bash
commands =
    flask sync
    bash -c "if [[ "$TRAVIS_BRANCH" = "develop" ]] && [[ -z "$TRAVIS_PULL_REQUEST" ]]; then flask translation-upload ;fi"

[testenv:translations]
description = Upload frontend and backend strings to Smartling
passenv = SMARTLING_* {[testenv]passenv}
deps =
    {[testenv:frontend-translations]deps}
commands =
    {[testenv:frontend-translations]commands}
    {[testenv:backend-translations]commands}
