#!/bin/sh -e
# postinst script
#
# see: dh_installdeb(1)

# dh_installdeb will replace this with shell code automatically generated by other debhelper scripts
#DEBHELPER#
venv_install_dir="${dh_venv_install_dir:?dh_venv_install_dir is not set (by dh-virtualenv autoscripts) as it should be}"

PACKAGE_NAME="${DPKG_MAINTSCRIPT_PACKAGE:?DPKG_MAINTSCRIPT_PACKAGE is not set as it should be}"

# summary of how this script can be called:
#  * <postinst> `configure' <most-recently-configured-version>
#  * <old-postinst> `abort-upgrade' <new version>
#  * <conflictor's-postinst> `abort-remove' `in-favour' <package> <new-version>
#  * <postinst> `abort-remove'
#  * <deconfigured's-postinst> `abort-deconfigure' `in-favour' <failed-install-package> <version> `removing' <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or the debian-policy package
case "$1" in
    configure)
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    triggered)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


PROJECT_DIR="${PROJECT_DIR:-$venv_install_dir}"

: "${FILE_UPLOAD_DIR?Need to set FILE_UPLOAD_DIR}"
: "${PERSISTENCE_EXCLUSIONS_DIR?Need to set PERSISTENCE_EXCLUSIONS_DIR}"
: "${PROJECT_DIR?Need to set PROJECT_DIR}"
: "${RUN_USER?Need to set RUN_USER}"

echo "Creating data directories..."
mkdir --verbose --parents \
    "${FILE_UPLOAD_DIR}" \
    "${PERSISTENCE_EXCLUSIONS_DIR}" \
    "${PROJECT_DIR}/var/portal-instance/"

echo "Setting ownership of files to ${RUN_USER}..."
chown --verbose "$RUN_USER:$RUN_USER" \
    "${FILE_UPLOAD_DIR}" \
    "${PERSISTENCE_EXCLUSIONS_DIR}" \
    "${PROJECT_DIR}/var/portal-instance/"

echo "Adding remap_envvars.py wrapper to run at start..."
cat > /etc/profile.d/remap_envvars.sh << 'SCRIPT_CONTENTS'
#!/bin/sh -e
echo Remapping env vars...
eval $(remap_envvars.py)

SCRIPT_CONTENTS
