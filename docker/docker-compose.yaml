---
version: "3.2"
services:
  # Base service; for extension only, not for direct use
  base: &service_base
    image: "${DOCKER_REPOSITORY-uwcirg-portal-docker.jfrog.io/}${DOCKER_IMAGE_NAME:-portal_web}:${DOCKER_IMAGE_TAG:-latest}"
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - debian_repo="${DEBIAN_REPO:-http://dl.bintray.com/v1/content/uwcirg/${BINTRAY_DEB_REPO:-true_nth}}"
    env_file:
      - portal.env
    environment:
      PERSISTENCE_DIR: ${PERSISTENCE_DIR:-gil}
      PGUSER: ${PGUSER:-postgres}
      PGPASSWORD: ${PGPASSWORD:-""}
      PGHOST: ${PGHOST:-db}
      PGDATABASE: ${PGDATABASE:-portaldb}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}

      - source: upload-data
        target: "${PROJECT_DIR:-/opt/venvs/portal}/lib/python2.7/site-packages/portal/uploads"
        type: volume
  web:
    <<: *service_base
    ports:
      - target: ${PORT:-8008}
        published: ${EXTERNAL_PORT:-8080}
    depends_on:
      - db
      - redis
      - celeryworker
      - celerybeat

  celeryworker:
    <<: *service_base
    command: bash -c '
      env &&
      celery worker
        --app portal.celery_worker.celery
        --loglevel debug
      '
    depends_on:
      - redis

  celerybeat:
    <<: *service_base
    command: bash -c '
      env &&
      wait-for-it --timeout=120 --host=web --port="$$PORT" --strict &&
      celery beat
        --app portal.celery_worker.celery
        --loglevel debug
        --schedule /tmp/celerybeat-schedule.db
        --pidfile /tmp/celerybeat.pid
      '
    depends_on:
      - celeryworker

  redis:
    image: redis
    ports:
      - target: 6379

  db:
    image: postgres
    ports:
      - target: 5432
    environment:
      POSTGRES_DB: ${PGDATABASE:-portaldb}
    volumes:
      - source: postgres-data
        target: /var/lib/postgresql/data
        type: volume

volumes:
    postgres-data: {}
    upload-data: {}
