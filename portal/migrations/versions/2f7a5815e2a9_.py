import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

"""empty message

Revision ID: 2f7a5815e2a9
Revises: 93809e7fbe16
Create Date: 2017-08-21 13:00:53.113380

"""

# revision identifiers, used by Alembic.
revision = '2f7a5815e2a9'
down_revision = '93809e7fbe16'


event_status_types = postgresql.ENUM(
    'preparation', 'in-progress', 'suspended', 'aborted',
    'completed', 'entered-in-error', 'unknown', name='event_statuses',
    create_type=False)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    event_status_types.create(op.get_bind(), checkfirst=True)
    op.create_table(
        'communications',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('status', event_status_types, nullable=False),
        sa.Column('communication_request_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('message_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['communication_request_id'],
                                ['communication_requests.id'], ),
        sa.ForeignKeyConstraint(['message_id'], ['email_messages.id'],
                                ondelete='cascade'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'],
                                ondelete='cascade'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint(
            'communication_request_id', 'user_id',
            name='_communication_request_user')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('communications')
    # ### end Alembic commands ###
